# Database
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/springboot
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver

#JPA
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
#        show-sql: true # System.out을 통해 찍는다.
        format_sql: true
        jdbc.lob.non_contextual_creation: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace # 파라미터 보여준다.

#  spring.datasource.url=jdbc:postgresql://localhost:5432/springboot
#  spring.datasource.username=postgres
#  spring.datasource.password=1234
      ## validate : 운영에서는 validate 가 가장좋은 옵션이다.
      ## update 추가 된 컬럼들을 자동을 추가해주나 이미 있는 걸럼을 없앤 것에 대해서는 삭제해주지않는다.
#      spring.jpa.hibernate.ddl-auto=create
#      spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#
#      spring.jpa.show-sql=true
#      spring.jpa.properties.hibernate.format_sql=true
#
#      spring.output.ansi.enabled=always
#
#      ## query의 ? 값을 보여주는 설정
#      logging.level.org.hibernate.type.descriptor.sql=trace